name: Build, Test and Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x] # Use Node.js 18 LTS for better sqlite3 compatibility
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install system dependencies for sqlite3
        run: sudo apt-get update && sudo apt-get install -y python3 make g++

      - name: Install project dependencies
        run: npm ci
        env:
          # This helps with sqlite3 compilation
          npm_config_build_from_source: true

      - name: Run build
        run: npm run build --if-present

      - name: Run tests
        run: npm test --if-present

      - name: NPM Audit for vulnerabilities
        run: npm audit --audit-level=moderate
        continue-on-error: true # Continue even if vulnerabilities found

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        with:
          command: monitor
          args: --all-projects --detection-depth=6
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'My Project'
          scanPath: '.'
          format: 'HTML'
          failOnCVSS: 7 # Fail if critical vulnerabilities found
